#!/bin/ksh
set -x

export RUN_ENVIR=${RUN_ENVIR:-"nco"}
export PS4='$SECONDS + '
date


##############################################
# Run setpdy and initialize PDY variables
##############################################
export cycle="t${cyc}z"
setpdy.sh
. ./PDY


##############################################
# Set com directory
##############################################
export CDATE=${CDATE:-${PDY}${cyc}}
export CDUMP=${CDUMP:-${RUN:-"wfs"}}
if [ $RUN_ENVIR = "nco" ]; then
    export ROTDIR=${COMROOT:?}/$NET/$envir
    export RSTDIR=${GESROOT:?}/$envir
fi


#############################
# Source relevant config files
#############################
configs="base fcst"
export EXPDIR=${EXPDIR:-$HOMEwamipe/parm/config}
config_path=${EXPDIR:-$NWROOT/wamipe.${wamipe_ver}/parm/config}
for config in $configs; do
    . $config_path/config.$config
    status=$?
    [[ $status -ne 0 ]] && exit $status
done

while read line; do export $line ; done < <($USHwamipe/create_config.py \
                                            -d $PARMDIR/default_config.json -p $DCOM)


##########################################
# Source machine runtime environment
##########################################
. $HOMEwamipe/env/${machine}.env fcst
status=$?
[[ $status -ne 0 ]] && exit $status


##############################################
# Obtain unique process id (pid) and make temp directory
##############################################
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA


##############################################
# Determine Job Output Name on System
##############################################
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile


##############################################
# Begin JOB SPECIFIC work
##############################################
GDATE=$($NDATE -$assim_freq $CDATE)
gPDY=$(echo $GDATE | cut -c1-8)
gcyc=$(echo $GDATE | cut -c9-10)
GDUMP=${GDUMP:-"wdas"}

# Restart conditions for WFS cycle come from GDAS
rCDUMP=$CDUMP
[[ $CDUMP = "wfs" ]] && export rCDUMP="wdas"

# Forecast length for GFS forecast
if [ $CDUMP = "wfs" ]; then
    export FHMAX=$FHMAX_WFS
    export FHOUT=$FHOUT_WFS
    export FHMAX_HF=$FHMAX_HF_WFS
    export FHOUT_HF=$FHOUT_HF_WFS
else
    export FHMAX_HF=0
    export FHOUT_HF=1
fi

# IAU handling
if [ $DOIAU = "YES" ] ; then
    export SFCI=$ROTDIR/$CDUMP.$PDY/$cyc/$CDUMP.t${cyc}z.${SFC:0:3}a03
    export SIGI=$ROTDIR/$GDUMP.$gPDY/$gcyc/$GDUMP.t${gcyc}z.${ATM:0:3}f03
    IAU_FG=$ROTDIR/$rCDUMP.$gPDY/$gcyc/$rCDUMP.t${gcyc}z.${ATM:0:3}f06
    IAU_ANL=$ROTDIR/$CDUMP.$PDY/$cyc/$CDUMP.t${cyc}z.${ATM}

    export FHINI=3
    export FHROT=3
    export FHMAX=$((FHMAX+6))

    IAUVARS="iau=.true.,iaufiles_fg='${IAU_FG}',iaufiles_anl='${IAU_ANL}',iaufhrs=6,iau_delthrs=6,"
    export DYNVARS=$DYNVARS$IAUVARS
    export PHYVARS=$PHYVARS$IAUVARS
fi

###############################################################
# Run relevant exglobal script
env
msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"
$LOGSCRIPT


${FORECASTSH:-$SCRwamipe/exwamipe_fcst_nems.sh}
status=$?
[[ $status -ne 0 ]] && exit $status


##############################################
# End JOB SPECIFIC work
##############################################

##############################################
# Final processing
##############################################
if [ -e "$pgmout" ] ; then
  cat $pgmout
fi

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"

##########################################
# Remove the Temporary working directory
##########################################
cd $DATAROOT
[[ $KEEPDATA = "NO" ]] && rm -rf $DATA

date
exit 0
